1. What happens when you initialize a repository? Why do you need to do it?

It creates all the initial meta data for the repository.

Now, we can start work with our version control.

2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The Staging area does not contain versions of the same file, only the files
to be commited. So in that sense it is different from a ripository.

But, it does contain meta data such as which files to commit, data that
a working directory does not have.

3. How can you use the staging area to make sure you have one commit per logical change?

Ensure that what is in the staging area is a single logical change.

If not, then first commit the staging area, and only then add files from the new logical change to the staging area.

4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

- Eperimental code
- Spinoff version of the product.

5. How do the diagrams help you visualize the branch structure?

6. What is the result of merging two branches together?
   Why do we represent it in the diagram the way we do?

7. What are the pros and cons of Git’s automatic merging vs. 
   always doing merges manually?

